{"ast":null,"code":"var _jsxFileName = \"D:\\\\Xaamp\\\\htdocs\\\\Reactjs\\\\api2\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport List from './components/List';\nimport './App.css';\n\nfunction App() {\n  const [records, setRecords] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchRecordsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/starships/');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      const transformedRecords = data.results.map(recordData => {\n        return {\n          id: movieData.MGLT,\n          title: recordData.name,\n          openingText: recordData.model,\n          releaseDate: recordData.passengers\n        };\n      });\n      setRecords(transformedRecords);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchRecordsHandler();\n  }, [fetchRecordsHandler]);\n  let content = /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Found no movies.\");\n\n  if (records.length > 0) {\n    content = /*#__PURE__*/React.createElement(List, {\n      records: records,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    });\n  }\n\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, error);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchRecordsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, content));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Xaamp/htdocs/Reactjs/api2/src/App.js"],"names":["React","useState","useEffect","useCallback","List","App","records","setRecords","isLoading","setIsLoading","error","setError","fetchRecordsHandler","response","fetch","ok","Error","data","json","transformedRecords","results","map","recordData","id","movieData","MGLT","title","name","openingText","model","releaseDate","passengers","message","content","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMW,mBAAmB,GAAGT,WAAW,CAAC,YAAY;AAClDM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,kBAAkB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,UAAD,IAAgB;AAC1D,eAAO;AACLC,UAAAA,EAAE,EAAEC,SAAS,CAACC,IADT;AAELC,UAAAA,KAAK,EAAEJ,UAAU,CAACK,IAFb;AAGLC,UAAAA,WAAW,EAAEN,UAAU,CAACO,KAHnB;AAILC,UAAAA,WAAW,EAAER,UAAU,CAACS;AAJnB,SAAP;AAMD,OAP0B,CAA3B;AAQAxB,MAAAA,UAAU,CAACY,kBAAD,CAAV;AACD,KAjBD,CAiBE,OAAOT,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAK,CAACsB,OAAP,CAAR;AACD;;AACDvB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAxBsC,EAwBpC,EAxBoC,CAAvC;AA0BAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,mBAAmB;AACpB,GAFQ,EAEN,CAACA,mBAAD,CAFM,CAAT;AAIA,MAAIqB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAd;;AAEA,MAAI3B,OAAO,CAAC4B,MAAR,GAAiB,CAArB,EAAwB;AACtBD,IAAAA,OAAO,gBAAG,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE3B,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACD;;AAED,MAAII,KAAJ,EAAW;AACTuB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIvB,KAAJ,CAAV;AACD;;AAED,MAAIF,SAAJ,EAAe;AACbyB,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAV;AACD;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAErB,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUqB,OAAV,CAJF,CADF;AAQD;;AAED,eAAe5B,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport List from './components/List';\nimport './App.css';\n\nfunction App() {\n  const [records, setRecords] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchRecordsHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/starships/');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      const transformedRecords = data.results.map((recordData) => {\n        return {\n          id: movieData.MGLT,\n          title: recordData.name,\n          openingText: recordData.model,\n          releaseDate: recordData.passengers,\n        };\n      });\n      setRecords(transformedRecords);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchRecordsHandler();\n  }, [fetchRecordsHandler]);\n\n  let content = <p>Found no movies.</p>;\n\n  if (records.length > 0) {\n    content = <List records={records} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchRecordsHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}